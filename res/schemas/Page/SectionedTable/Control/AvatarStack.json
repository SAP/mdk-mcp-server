{
    "$id": "Page/SectionedTable/Control/AvatarStack",
    "title": "AvatarStack",
    "additionalProperties": {
        "proxy": "ObjectCellProxy"
    },
    "properties": {
        "Avatar": {
            "description": "Dynamic binding of Avatar that contains image or image text to be displayed.",
            "$ref": "Page/SectionedTable/Control/Avatar"
        },
        "Avatars": {
            "description": "Static binding of Avatar that contains image or image text to be displayed.",
            "anyOf": [
                {
                    "items": {
                        "$ref": "Page/SectionedTable/Control/Avatar" 
                    },
                    "type": "array"
                },
                {
                    "$ref": "definitions/Rule"
                }
            ]
        },
        "ImageIsCircular": {
            "type": "boolean",
            "default": true,
            "description": "If the value is true, the image in grid is displayed in a circular shape. Otherwise, it will be a square."
        },
        "ImageHasBorder": {
            "type": "boolean",
            "default": false,
            "description": "If the value is true, the image in stack displayed has an outer border. \n\nNot supported on web."
        },
        "BadgeImage": {
            "$ref": "definitions/Image",
            "description": "Image to be displayed at the bottom right corner of a single avatar in object cell. Double avatar will not render badge image. \n\nNot supported on web."
        },
        "OverflowToGrid": {
            "type": "object",
            "description": "If more than 2 avatars are defined in `AvatarStack`, 3rd avatar onwards can be displayed in `AvatarGrid` if enabled.",
            "properties": {
                "Enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "If the value is true, the 3rd avatar onwards that are not displayed in `AvatarStack`, will be displayed in `AvatarGrid`.\n\nBut if `AvatarGrid` is also defined, avatars in `AvatarGrid` takes precedence over these leftover avatars in `AvatarStack`."
                },
                "GridMax": {
                    "type": "integer",
                    "default": 5,
                    "description": "Maximum number of avatars to be displayed in `AvatarGrid` including the extra avatar counter."
                },
                "ImageIsCircular": {
                    "type": "boolean",
                    "default": true,
                    "description": "If the value is true, the image in grid is displayed in a circular shape. Otherwise, it will be a square."
                }
            }
        },
        "BindingCollection": {
            "description": "Definition of the BindingCollection to dynamically populate the collection. You can set this to binding/rule to return an array of data items. Note: If this is set to binding/rule, you must return an array of data items.",
            "$ref": "definitions/Bindable"
        }
    },
    "type": "object",
    "required": ["Avatars"]
}
  